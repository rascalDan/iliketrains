using gcc ;
using pkg-config ;
import pkg-config ;
import type : register ;
import type : type ;
import generators : register-standard ;
import testing ;
import lex ;
import sequence ;

pkg-config.import sdl2 ;
pkg-config.import glew ;
lib pthread ;

variant coverage : debug ;
project : requirements
	<cxxstd>20
	<variant>release:<lto>on
	<variant>coverage:<coverage>on
	<toolset>tidy:<exclude>gfx/models/obj.cpp
	<toolset>tidy:<exclude>lib/jsonParse.cpp
	<toolset>tidy:<checkxx>boost-*
	<toolset>tidy:<checkxx>bugprone-*
	<toolset>tidy:<xcheckxx>bugprone-easily-swappable-parameters
	<toolset>tidy:<checkxx>clang-*
	<toolset>tidy:<xcheckxx>clang-analyzer-cplusplus.NewDeleteLeaks
	<toolset>tidy:<checkxx>misc-*
	<toolset>tidy:<xcheckxx>misc-non-private-member-variables-in-classes
	<toolset>tidy:<checkxx>modernize-*
	<toolset>tidy:<xcheckxx>modernize-use-trailing-return-type
	<toolset>tidy:<checkxx>hicpp-*
	<toolset>tidy:<xcheckxx>hicpp-signed-bitwise
	<toolset>tidy:<xcheckxx>hicpp-named-parameter
	<toolset>tidy:<xcheckxx>hicpp-no-array-decay
	<toolset>tidy:<checkxx>performance-*
	<toolset>tidy:<comments>no
	<toolset>tidy:<mapping>iwyu.json
	<toolset>tidy:<define>TIDY
	;

type.register GL_VERTEX_SHADER : vs ;
type.register GL_FRAGMENT_SHADER : fs ;

generators.register-standard embed.glsl : GL_VERTEX_SHADER : CPP(vs-%) H(vs-%) ;
generators.register-standard embed.glsl : GL_FRAGMENT_SHADER : CPP(fs-%) H(fs-%) ;

actions embed.glsl
{
	m4 -DNAME=$(2:B) -DTYPE=$(2:S) > $(1[2]) lib/embed-glsl.h.m4
	m4 -DSOURCE=$(2) -DNAME=$(2:B) -DTYPE=$(2:S) -DGLTYPE=$(OPTIONS) > $(1[1]) lib/embed-glsl.cpp.m4
}
rule embed.glsl ( targets * : sources * : properties * )
{
	DEPENDS $(targets) : lib/embed-glsl.h.m4 lib/embed-glsl.cpp.m4 ;
	OPTIONS on $(targets) = [ type.type $(sources) ] ;
}
IMPORT $(__name__) : embed.glsl : : embed.glsl ;

exe iliketrains :
	application/main.cpp
	:
	<library>ilt
	;

explicit main ;
run application/main.cpp
	: -- :
	[ sequence.insertion-sort [ glob res/* ] ]
	:
	<library>ilt
	;

lib ilt :
	[ glob-tree *.cpp *.vs *.fs : application bin test ]
	[ lib generated : [ glob-tree *.ll *.c ] :
		<include>.
		<include>lib
		<link>static
		<cflags>-fPIC
	]
	:
	<variant>debug:<warnings>pedantic
	<variant>debug:<warnings-as-errors>on
	<variant>debug:<cflags>-Wnon-virtual-dtor
	<variant>debug:<cflags>-Wold-style-cast
	<variant>debug:<cflags>-Wcast-align
	<variant>debug:<cflags>-Wunused
	<variant>debug:<cflags>-Woverloaded-virtual
	<variant>debug:<cflags>-Wpedantic
	<variant>debug:<cflags>-Wconversion
	<variant>debug:<cflags>-Wsign-conversion
	<variant>debug:<cflags>-Wnull-dereference
	<variant>debug:<cflags>-Wdouble-promotion
	<variant>debug:<cflags>-Wformat=2
	<toolset>gcc,<variant>debug:<cflags>-Wduplicated-cond
	<toolset>gcc,<variant>debug:<cflags>-Wduplicated-branches
	<toolset>gcc,<variant>debug:<cflags>-Wlogical-op
	<toolset>gcc,<variant>debug:<cflags>-Wuseless-cast
	<include>.
	<include>lib
	<library>sdl2
	<library>glew
	<library>pthread
	: :
	<include>.
	<include>lib
	;

build-project test ;
